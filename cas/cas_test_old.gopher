package cas

import (
	"net/http/httptest"
	"testing"

	"github.com/PuerkitoBio/goquery"
)

// Test index page load
func TestHTTPIndexPageLoad(t *testing.T) {
	httpTestHarness(t, "", func(t *testing.T, _ *CAS, httpTestServer *httptest.Server, doc *goquery.Document) {
		// Ensure title of index page (endpoint "") contains what we expect
		expectedText, actualText := "CasGo", doc.Find("title").Text()
		if expectedText != actualText {
			t.Errorf("Actual title text [%s] != expected title text [%s]", actualText, expectedText)
		}
	})
}

// Test login page display (check for some expected elements)
func TestHTTPLoginPageLoad(t *testing.T) {
	httpTestHarness(t, "/login", func(t *testing.T, server *CAS, httpTestServer *httptest.Server, doc *goquery.Document) {
		// Ensure actual title text of login page (endpoint "/login") matches what is expected
		expectedText := server.Config["companyName"] + " CasGo Login"
		actualText := doc.Find("title").Text()
		if expectedText != actualText {
			t.Errorf("Actual title text [%s] != expected title text [%s]", actualText, expectedText)
		}

	})
}

// Test register page load
func TestHTTPRegisterPageLoad(t *testing.T) {
	httpTestHarness(t, "/register", func(t *testing.T, server *CAS, httpTestServer *httptest.Server, doc *goquery.Document) {
		expectedText := server.Config["companyName"] + " CasGo Register"
		actualText := doc.Find("title").Text()
		if expectedText != actualText {
			t.Errorf("Actual title text [%s] != expected title text [%s]", actualText, expectedText)
		}
	})
}
